解题思路: 
  为0012题的逆命题，同样的先列出表，然后进行字符匹配。
  关于字符匹配，快捷的方式是扫描字符串，然后扫描到哪里，就将这段子串去匹配map中存下来的数字。
  本题的关键是，罗马数字的读取不可能有歧义，如果有，则题目本身就有问题。

  另外本题还是字符串的问题，优先要想到字符串扫描的方法。这个是此类题最基础的。


代码:
class Solution {
public:
	int romanToInt(string s) {

		int result = 0;

		unordered_map<string, int> romanNumMap;

		mapInit(romanNumMap);

		int begin = 0;
		int i = 0;
		for (i = 1; i < s.length(); i++) {
			if (romanNumMap.find(s.substr(begin, i - begin + 1)) == romanNumMap.end()) {

				result += romanNumMap[s.substr(begin, i - begin)];

				begin = i;
				
			}
		}
		
		if (romanNumMap.find(s.substr(begin, i - begin)) != romanNumMap.end()) {
			result += romanNumMap[s.substr(begin, i - begin)];
		}



		return result;
	}

	void mapInit(unordered_map<string, int> &romanNumMap) {
		romanNumMap["I"] = 1;
		romanNumMap["II"] = 2;
		romanNumMap["III"] = 3;
		romanNumMap["IV"] = 4;
		romanNumMap["V"] = 5;
		romanNumMap["VI"] = 6;
		romanNumMap["VII"] = 7;
		romanNumMap["VIII"] = 8;
		romanNumMap["IX"] = 9;
		romanNumMap["X"] = 10;
		romanNumMap["XL"] = 40;
		romanNumMap["L"] = 50;
		romanNumMap["LX"] = 60;
		romanNumMap["LXX"] = 70;
		romanNumMap["LXXX"] = 80;
		romanNumMap["XC"] = 90;
		romanNumMap["C"] = 100;
		romanNumMap["CD"] = 400;
		romanNumMap["D"] = 500;
		romanNumMap["DC"] = 600;
		romanNumMap["DCC"] = 700;
		romanNumMap["DCCC"] = 800;
		romanNumMap["CM"] = 900;
		romanNumMap["M"] = 1000;
	}

};
