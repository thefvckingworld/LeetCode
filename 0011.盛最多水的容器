解题思路:
  观察题目数据量可知，一定是一个复杂度小于O(n^2)的算法。
  接着往下观察，如果要盛水，必然在某两个柱子之间，另外一种理解是，必然以其中一个柱子为起点。
  所以暴力解法是，以某一点为起点，然后向右边延伸，找到最大的即可。(同时，可以观察到，陈水量，只与两端的柱子有关，与中间的柱子无关, 在遍历时，如果后面的柱子比前面的矮，则不需要再遍历)
  接着往下优化: 看哪些能不进行遍历，假设两层循环是,一个是i,一个是j,则当h[i - 1] > h[i]时，不需要进入遍历,当h[j] < h[j + 1],不需要进入遍历
  接着往下优化: 为了能在遍历时，不进行前向判断，而是遍历方向与要判断的数据一致，考虑将i固定在0处,将j固定在h_size - 1处,然后每移动一个i，遍历所有的j,这样就不要进行前向判断了。
                (到这里为止，还是两层循环)
  接着往下优化: 


代码:
  

