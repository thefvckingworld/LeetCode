解题思路1:
  使用两个指针方式合并两个数组，然后找到中位数。

  两个有序数组合并的证明:
    v1: a1 a2 a3 a4 a5 ... bm
    v2: b1 b2 b3 b4 b5 ... bn

代码(可优化，把数组去掉，只知道对应的中位数即可):
class Solution {
public:
	double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
		vector<int> totalVec;

		int p1 = 0;
		int p2 = 0;

		int m = nums1.size();
		int n = nums2.size();

		while (p1 < m && p2 < n) {
			if (nums1[p1] < nums2[p2]) {
				totalVec.push_back(nums1[p1]);
				p1++;
			}
			else if (nums1[p1] > nums2[p2]) {
				totalVec.push_back(nums2[p2]);
				p2++;
			}
			else {
				totalVec.push_back(nums1[p1]);
				totalVec.push_back(nums2[p2]);
				p1++;
				p2++;
			}
		}

		while (p1 < m) {
			totalVec.push_back(nums1[p1]);
			p1++;
		}

		while (p2 < n) {
			totalVec.push_back(nums2[p2]);
			p2++;
		}

		if ((m + n) % 2) {
			return totalVec[(m + n) / 2] * 1.0;
		}
		else {
			return (totalVec[(m + n - 1) / 2] + totalVec[(m + n - 1 + 1)  / 2])  * 1.0 / 2;
		}

	}
};
